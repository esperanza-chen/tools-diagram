!function (l) { var d = { globalParams: { "渠道": "", "设备": "", "版本号": "", "用户属性": { "用户ID": "", "用户来源": "", "用户状态": "", "注册时间": "", "注册方式": "", "最后登录时间": "", "创作者状态": "", "会员到期时间": "", "文件数量": "", "模板数量": "" } }, visit: { pageName: null, option: {}, hash: !1, debug: !1 }, params: { "进入页面时间": 0, "滚屏次数": 0 }, init: function () { var e = navigator.userAgent.toLowerCase(), i = function (i) { return i.test(e) }, n = function (i) { return (e.match(i) + "").replace(/[^0-9|_.]/gi, "").replace(/_/gi, ".") }, t = "unknown"; i(/windows|win32|win64|wow32|wow64/gi) ? t = "windows" : i(/macintosh|macintel/gi) ? t = "osx" : i(/x11/gi) ? t = "linux" : i(/android|adr/gi) ? t = "android" : i(/ios|iphone|ipad|ipod|iwatch/gi) && (t = "ios"); var o = "unknown"; "windows" === (d.globalParams["设备"] = t) ? i(/windows nt 5.0|windows 2000/gi) ? o = "2000" : i(/windows nt 5.1|windows xp/gi) ? o = "xp" : i(/windows nt 5.2|windows 2003/gi) ? o = "2003" : i(/windows nt 6.0|windows vista/gi) ? o = "vista" : i(/windows nt 6.1|windows 7/gi) ? o = "7" : i(/windows nt 6.2|windows 8/gi) ? o = "8" : i(/windows nt 6.3|windows 8.1/gi) ? o = "8.1" : i(/windows nt 10.0|windows 10/gi) && (o = "10") : "osx" === t ? o = n(/os x [\d._]+/gi) : "android" === t ? o = n(/android [\d._]+/gi) : "ios" === t && (o = n(/os [\d._]+/gi)), d.globalParams["版本号"] = o; var a = "web"; "micromessenger" == e.match(/MicroMessenger/i) ? wx.miniProgram.getEnv(function (i) { i.miniprogram && (a = "小程序") }) : i(/electron/gi) ? a = "客户端" : "ios" != t && "android" != t || (a = "APP"), d.globalParams["渠道"] = a, d.params["进入页面时间"] = (new Date).getTime(); d.bindEvent() }, bindEvent: function () { var i = l.onbeforeunload || function () { }, e = l.onhashchange || function () { }, n = function () { var i = l.location.href, e = d.visit.pageName, n = d.visit.option || {}; n["停留时长"] = parseInt(((new Date).getTime() - d.params["进入页面时间"]) / 1e3), e && "" != e || (e = d.pageName(i)), "官网首页" == e && (n["滚屏次数"] = d.params["滚屏次数"]), d.page_visit_time(e, n), localStorage.setItem("po_last_page", e) }; "onhashchange" in l && (void 0 === document.documentMode || 8 == document.documentMode) && l.addEventListener("hashchange", function () { d.visit.hash && n(), e() }, !1), l.addEventListener("beforeunload", function () { n(), i() }, !1); var t, o, a, s, g, r, c = function () { ++d.params["滚屏次数"] }; t = document, o = "scroll", a = c, t.removeEventListener ? t.removeEventListener(o, a) : t.detachEvent("on" + o, a), s = document, g = "scroll", r = c, s.addEventListener ? s.addEventListener(g, r) : s.attachEvent("on" + event, r) }, pageName: function (i) { return i.match(/\/signup/gi) ? "注册页" : null }, setTouchPlace: function (i) { localStorage.setItem("po_touch_place", i) }, getTouchPlace: function (i) { var e = localStorage.getItem("po_touch_place"); return i || localStorage.removeItem("po_touch_place"), e }, page_visit: function (i, e, n, t) { d.visit.pageName = i, d.visit.hash = !!n, d.visit.option = e || {}; var o = localStorage.getItem("po_last_page") || "无"; (e = e || {})["触发位置"] = d.getTouchPlace(), e["用户类型"] = d.globalParams["用户属性"]["用户状态"], "专题详情页" == i ? e["专题ID"] = Util.getUrlParams1("id") : "文件分享页" != i && "常规邀请活动_邀请落地页" != i || e["页面来源"] || (e["页面来源"] = "站外", e["来源URL"] = document.referrer); var a = {}; Object.assign(a, { "页面名称": i, "页面来源": o }), Object.assign(a, d.globalParams), Object.assign(a, e), d.visit.debug && console.log(JSON.stringify(a)); var s = "page_visit"; t && "" != t && (s = t + "_page_visit"), poCollect(s, a) }, page_visit_time: function (i, e) { var n = localStorage.getItem("po_last_page") || "无"; e = e || {}; var t = {}; Object.assign(t, { "页面名称": i, "页面来源": n }), Object.assign(t, d.globalParams), Object.assign(t, e), d.visit.debug && console.log(JSON.stringify(t)), poCollect("page_visit_time", t) }, click: function (i, e, n) { n = n || {}, e = e || localStorage.getItem("po_last_page"), n["触发位置"] = d.getTouchPlace(), n["用户类型"] = d.globalParams["用户属性"]["用户状态"]; var t = {}; Object.assign(t, { "当前页面": e }), Object.assign(t, d.globalParams), Object.assign(t, n), d.visit.debug && console.log(JSON.stringify(t)), poCollect(i, t) } }; d.init(), l.buried_point = d, l.buried_point_fn = function (i, e, n, t, o) { if (d[i]) return d[i](e, n, t, o) } }(window);